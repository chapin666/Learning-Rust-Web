{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4","program":"/Users/chengbin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_io","--edition=2018","/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=258c9115060eb862","-C","extra-filename=-258c9115060eb862","--out-dir","/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps","-L","dependency=/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/chengbin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps/libfutures_io-258c9115060eb862.rmeta"},"prelude":{"crate_id":{"name":"futures_io","disambiguator":[7163970961465124453,2021316913371557222]},"crate_root":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src","external_crates":[{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}}],"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":0,"byte_end":21754,"line_start":1,"line_end":567,"column_start":1,"column_end":25}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14383,"byte_end":14384,"line_start":320,"line_end":320,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":0,"byte_end":21754,"line_start":1,"line_end":567,"column_start":1,"column_end":25},"name":"","qualname":"::","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":73}],"decl_id":null,"docs":" Asynchronous I/O","sig":null,"attributes":[{"value":"! Asynchronous I/O","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":21,"byte_end":24,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This crate contains the `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":25,"byte_end":96,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"! `AsyncBufRead` traits, the asynchronous analogs to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":97,"byte_end":151,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"! `std::io::{Read, Write, Seek, BufRead}`. The primary difference is","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":152,"byte_end":222,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"! that these traits integrate with the asynchronous task system.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":223,"byte_end":289,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":290,"byte_end":293,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! All items of this library are only available when the `std` feature of this","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":294,"byte_end":373,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"! library is activated, and it is activated by default.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":374,"byte_end":431,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":570,"byte_end":658,"line_start":15,"line_end":15,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":826,"byte_end":847,"line_start":18,"line_end":18,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":2323,"byte_end":2332,"line_start":57,"line_end":57,"column_start":15,"column_end":24},"name":"AsyncRead","qualname":"::if_std::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":1931,"byte_end":1961,"line_start":50,"line_end":50,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":1966,"byte_end":1969,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Read` trait, but integrates","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":1974,"byte_end":2046,"line_start":52,"line_end":52,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_read`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":2051,"byte_end":2120,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Read::read`, will automatically queue the current task","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":2125,"byte_end":2199,"line_start":54,"line_end":54,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":2204,"byte_end":2280,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":2285,"byte_end":2308,"line_start":56,"line_end":56,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3824,"byte_end":3833,"line_start":93,"line_end":93,"column_start":12,"column_end":21},"name":"poll_read","qualname":"::if_std::AsyncRead::poll_read","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &mut [u8]) -> Poll<Result<usize>>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `buf`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3091,"byte_end":3143,"line_start":78,"line_end":78,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3152,"byte_end":3155,"line_start":79,"line_end":79,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3164,"byte_end":3222,"line_start":80,"line_end":80,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3231,"byte_end":3234,"line_start":81,"line_end":81,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3243,"byte_end":3302,"line_start":82,"line_end":82,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3311,"byte_end":3369,"line_start":83,"line_end":83,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3378,"byte_end":3459,"line_start":84,"line_end":84,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3468,"byte_end":3494,"line_start":85,"line_end":85,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3503,"byte_end":3506,"line_start":86,"line_end":86,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3515,"byte_end":3535,"line_start":87,"line_end":87,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3544,"byte_end":3547,"line_start":88,"line_end":88,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3556,"byte_end":3619,"line_start":89,"line_end":89,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3628,"byte_end":3694,"line_start":90,"line_end":90,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3703,"byte_end":3761,"line_start":91,"line_end":91,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3770,"byte_end":3812,"line_start":92,"line_end":92,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5090,"byte_end":5108,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"::if_std::AsyncRead::poll_read_vectored","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, bufs: &mut [IoSliceMut<'_>]) -> Poll<Result<usize>>","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Attempt to read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":3939,"byte_end":4006,"line_start":96,"line_end":96,"column_start":9,"column_end":76}},{"value":"/ IO operations.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4015,"byte_end":4033,"line_start":97,"line_end":97,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4042,"byte_end":4045,"line_start":98,"line_end":98,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_read`, but allows data to be read","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4054,"byte_end":4123,"line_start":99,"line_end":99,"column_start":9,"column_end":78}},{"value":"/ into multiple buffers using a single operation.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4132,"byte_end":4183,"line_start":100,"line_end":100,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4192,"byte_end":4195,"line_start":101,"line_end":101,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_read))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4204,"byte_end":4262,"line_start":102,"line_end":102,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4271,"byte_end":4274,"line_start":103,"line_end":103,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4283,"byte_end":4342,"line_start":104,"line_end":104,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4351,"byte_end":4409,"line_start":105,"line_end":105,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4418,"byte_end":4499,"line_start":106,"line_end":106,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4508,"byte_end":4534,"line_start":107,"line_end":107,"column_start":9,"column_end":35}},{"value":"/ By default, this method delegates to using `poll_read` on the first","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4543,"byte_end":4614,"line_start":108,"line_end":108,"column_start":9,"column_end":80}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4623,"byte_end":4699,"line_start":109,"line_end":109,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4708,"byte_end":4760,"line_start":110,"line_end":110,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4769,"byte_end":4772,"line_start":111,"line_end":111,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4781,"byte_end":4801,"line_start":112,"line_end":112,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4810,"byte_end":4813,"line_start":113,"line_end":113,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4822,"byte_end":4885,"line_start":114,"line_end":114,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4894,"byte_end":4960,"line_start":115,"line_end":115,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":4969,"byte_end":5027,"line_start":116,"line_end":116,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5036,"byte_end":5078,"line_start":117,"line_end":117,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5831,"byte_end":5841,"line_start":138,"line_end":138,"column_start":15,"column_end":25},"name":"AsyncWrite","qualname":"::if_std::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24}],"decl_id":null,"docs":" Write bytes asynchronously.","sig":null,"attributes":[{"value":"/ Write bytes asynchronously.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5434,"byte_end":5465,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5470,"byte_end":5473,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Write` trait, but integrates","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5478,"byte_end":5551,"line_start":133,"line_end":133,"column_start":5,"column_end":78}},{"value":"/ with the asynchronous task system. In particular, the `poll_write`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5556,"byte_end":5626,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ method, unlike `Write::write`, will automatically queue the current task","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5631,"byte_end":5707,"line_start":135,"line_end":135,"column_start":5,"column_end":81}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5712,"byte_end":5788,"line_start":136,"line_end":136,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5793,"byte_end":5816,"line_start":137,"line_end":137,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6593,"byte_end":6603,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"poll_write","qualname":"::if_std::AsyncWrite::poll_write","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, buf: &[u8]) -> Poll<Result<usize>>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5852,"byte_end":5906,"line_start":139,"line_end":139,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5915,"byte_end":5918,"line_start":140,"line_end":140,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5927,"byte_end":5988,"line_start":141,"line_end":141,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":5997,"byte_end":6000,"line_start":142,"line_end":142,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6009,"byte_end":6071,"line_start":143,"line_end":143,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6080,"byte_end":6138,"line_start":144,"line_end":144,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6147,"byte_end":6228,"line_start":145,"line_end":145,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6237,"byte_end":6263,"line_start":146,"line_end":146,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6272,"byte_end":6275,"line_start":147,"line_end":147,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6284,"byte_end":6304,"line_start":148,"line_end":148,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6313,"byte_end":6316,"line_start":149,"line_end":149,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6325,"byte_end":6388,"line_start":150,"line_end":150,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6397,"byte_end":6463,"line_start":151,"line_end":151,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6472,"byte_end":6530,"line_start":152,"line_end":152,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6539,"byte_end":6581,"line_start":153,"line_end":153,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7881,"byte_end":7900,"line_start":180,"line_end":180,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"::if_std::AsyncWrite::poll_write_vectored","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, bufs: &[IoSlice<'_>]) -> Poll<Result<usize>>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `bufs` into the object using vectored","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6705,"byte_end":6774,"line_start":157,"line_end":157,"column_start":9,"column_end":78}},{"value":"/ IO operations.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6783,"byte_end":6801,"line_start":158,"line_end":158,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6810,"byte_end":6813,"line_start":159,"line_end":159,"column_start":9,"column_end":12}},{"value":"/ This method is similar to `poll_write`, but allows data from multiple buffers to be written","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6822,"byte_end":6917,"line_start":160,"line_end":160,"column_start":9,"column_end":104}},{"value":"/ using a single operation.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6926,"byte_end":6955,"line_start":161,"line_end":161,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6964,"byte_end":6967,"line_start":162,"line_end":162,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":6976,"byte_end":7037,"line_start":163,"line_end":163,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7046,"byte_end":7049,"line_start":164,"line_end":164,"column_start":9,"column_end":12}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7058,"byte_end":7120,"line_start":165,"line_end":165,"column_start":9,"column_end":71}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7129,"byte_end":7187,"line_start":166,"line_end":166,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7196,"byte_end":7277,"line_start":167,"line_end":167,"column_start":9,"column_end":90}},{"value":"/ writable or is closed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7286,"byte_end":7312,"line_start":168,"line_end":168,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7321,"byte_end":7324,"line_start":169,"line_end":169,"column_start":9,"column_end":12}},{"value":"/ By default, this method delegates to using `poll_write` on the first","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7333,"byte_end":7405,"line_start":170,"line_end":170,"column_start":9,"column_end":81}},{"value":"/ nonempty buffer in `bufs`, or an empty one if none exists. Objects which","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7414,"byte_end":7490,"line_start":171,"line_end":171,"column_start":9,"column_end":85}},{"value":"/ support vectored IO should override this method.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7499,"byte_end":7551,"line_start":172,"line_end":172,"column_start":9,"column_end":61}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7560,"byte_end":7563,"line_start":173,"line_end":173,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7572,"byte_end":7592,"line_start":174,"line_end":174,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7601,"byte_end":7604,"line_start":175,"line_end":175,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7613,"byte_end":7676,"line_start":176,"line_end":176,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7685,"byte_end":7751,"line_start":177,"line_end":177,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7760,"byte_end":7818,"line_start":178,"line_end":178,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":7827,"byte_end":7869,"line_start":179,"line_end":179,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8995,"byte_end":9005,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"::if_std::AsyncWrite::poll_flush","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<()>>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Attempt to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempt to flush the object, ensuring that any buffered data reach","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8215,"byte_end":8285,"line_start":192,"line_end":192,"column_start":9,"column_end":79}},{"value":"/ their destination.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8294,"byte_end":8316,"line_start":193,"line_end":193,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8325,"byte_end":8328,"line_start":194,"line_end":194,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8337,"byte_end":8383,"line_start":195,"line_end":195,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8392,"byte_end":8395,"line_start":196,"line_end":196,"column_start":9,"column_end":12}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8404,"byte_end":8468,"line_start":197,"line_end":197,"column_start":9,"column_end":73}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8477,"byte_end":8535,"line_start":198,"line_end":198,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8544,"byte_end":8626,"line_start":199,"line_end":199,"column_start":9,"column_end":91}},{"value":"/ progress towards flushing.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8635,"byte_end":8665,"line_start":200,"line_end":200,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8674,"byte_end":8677,"line_start":201,"line_end":201,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8686,"byte_end":8706,"line_start":202,"line_end":202,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8715,"byte_end":8718,"line_start":203,"line_end":203,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8727,"byte_end":8790,"line_start":204,"line_end":204,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8799,"byte_end":8865,"line_start":205,"line_end":205,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8874,"byte_end":8932,"line_start":206,"line_end":206,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":8941,"byte_end":8983,"line_start":207,"line_end":207,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9791,"byte_end":9801,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"poll_close","qualname":"::if_std::AsyncWrite::poll_close","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<()>>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Attempt to close the object.","sig":null,"attributes":[{"value":"/ Attempt to close the object.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9080,"byte_end":9112,"line_start":210,"line_end":210,"column_start":9,"column_end":41}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9121,"byte_end":9124,"line_start":211,"line_end":211,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9133,"byte_end":9179,"line_start":212,"line_end":212,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9188,"byte_end":9191,"line_start":213,"line_end":213,"column_start":9,"column_end":12}},{"value":"/ If closing cannot immediately complete, this function returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9200,"byte_end":9265,"line_start":214,"line_end":214,"column_start":9,"column_end":74}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9274,"byte_end":9332,"line_start":215,"line_end":215,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object can make","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9341,"byte_end":9423,"line_start":216,"line_end":216,"column_start":9,"column_end":91}},{"value":"/ progress towards closing.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9432,"byte_end":9461,"line_start":217,"line_end":217,"column_start":9,"column_end":38}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9470,"byte_end":9473,"line_start":218,"line_end":218,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9482,"byte_end":9502,"line_start":219,"line_end":219,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9511,"byte_end":9514,"line_start":220,"line_end":220,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9523,"byte_end":9586,"line_start":221,"line_end":221,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9595,"byte_end":9661,"line_start":222,"line_end":222,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9670,"byte_end":9728,"line_start":223,"line_end":223,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9737,"byte_end":9779,"line_start":224,"line_end":224,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10270,"byte_end":10279,"line_start":235,"line_end":235,"column_start":15,"column_end":24},"name":"AsyncSeek","qualname":"::if_std::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9878,"byte_end":9908,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9913,"byte_end":9916,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::Seek` trait, but integrates","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9921,"byte_end":9993,"line_start":230,"line_end":230,"column_start":5,"column_end":77}},{"value":"/ with the asynchronous task system. In particular, the `poll_seek`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":9998,"byte_end":10067,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ method, unlike `Seek::seek`, will automatically queue the current task","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10072,"byte_end":10146,"line_start":232,"line_end":232,"column_start":5,"column_end":79}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10151,"byte_end":10227,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10232,"byte_end":10255,"line_start":234,"line_end":234,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11134,"byte_end":11143,"line_start":255,"line_end":255,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"::if_std::AsyncSeek::poll_seek","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>, pos: SeekFrom) -> Poll<Result<u64>>","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Attempt to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempt to seek to an offset, in bytes, in a stream.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10290,"byte_end":10346,"line_start":236,"line_end":236,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10355,"byte_end":10358,"line_start":237,"line_end":237,"column_start":9,"column_end":12}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10367,"byte_end":10440,"line_start":238,"line_end":238,"column_start":9,"column_end":82}},{"value":"/ by the implementation.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10449,"byte_end":10475,"line_start":239,"line_end":239,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10484,"byte_end":10487,"line_start":240,"line_end":240,"column_start":9,"column_end":12}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10496,"byte_end":10545,"line_start":241,"line_end":241,"column_start":9,"column_end":58}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10554,"byte_end":10624,"line_start":242,"line_end":242,"column_start":9,"column_end":79}},{"value":"/ That position can be used later with [`SeekFrom::Start`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10633,"byte_end":10694,"line_start":243,"line_end":243,"column_start":9,"column_end":70}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10703,"byte_end":10706,"line_start":244,"line_end":244,"column_start":9,"column_end":12}},{"value":"/ # Errors","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10715,"byte_end":10727,"line_start":245,"line_end":245,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10736,"byte_end":10739,"line_start":246,"line_end":246,"column_start":9,"column_end":12}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10748,"byte_end":10804,"line_start":247,"line_end":247,"column_start":9,"column_end":65}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10813,"byte_end":10816,"line_start":248,"line_end":248,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10825,"byte_end":10845,"line_start":249,"line_end":249,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10854,"byte_end":10857,"line_start":250,"line_end":250,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10866,"byte_end":10929,"line_start":251,"line_end":251,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":10938,"byte_end":11004,"line_start":252,"line_end":252,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11013,"byte_end":11071,"line_start":253,"line_end":253,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11080,"byte_end":11122,"line_start":254,"line_end":254,"column_start":9,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11654,"byte_end":11666,"line_start":266,"line_end":266,"column_start":15,"column_end":27},"name":"AsyncBufRead","qualname":"::if_std::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"decl_id":null,"docs":" Read bytes asynchronously.","sig":null,"attributes":[{"value":"/ Read bytes asynchronously.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11248,"byte_end":11278,"line_start":259,"line_end":259,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11283,"byte_end":11286,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This trait is analogous to the `std::io::BufRead` trait, but integrates","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11291,"byte_end":11366,"line_start":261,"line_end":261,"column_start":5,"column_end":80}},{"value":"/ with the asynchronous task system. In particular, the `poll_fill_buf`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11371,"byte_end":11444,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ method, unlike `BufRead::fill_buf`, will automatically queue the current task","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11449,"byte_end":11530,"line_start":263,"line_end":263,"column_start":5,"column_end":86}},{"value":"/ for wakeup and return if data is not yet available, rather than blocking","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11535,"byte_end":11611,"line_start":264,"line_end":264,"column_start":5,"column_end":81}},{"value":"/ the calling thread.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11616,"byte_end":11639,"line_start":265,"line_end":265,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13169,"byte_end":13182,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"::if_std::AsyncBufRead::poll_fill_buf","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<&[u8]>>","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Attempt to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempt to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11688,"byte_end":11772,"line_start":267,"line_end":267,"column_start":9,"column_end":93}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11781,"byte_end":11822,"line_start":268,"line_end":268,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":269,"line_end":269,"column_start":9,"column_end":12}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11843,"byte_end":11890,"line_start":270,"line_end":270,"column_start":9,"column_end":56}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11899,"byte_end":11902,"line_start":271,"line_end":271,"column_start":9,"column_end":12}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11911,"byte_end":11970,"line_start":272,"line_end":272,"column_start":9,"column_end":68}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11979,"byte_end":12037,"line_start":273,"line_end":273,"column_start":9,"column_end":67}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12046,"byte_end":12127,"line_start":274,"line_end":274,"column_start":9,"column_end":90}},{"value":"/ readable or is closed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12136,"byte_end":12162,"line_start":275,"line_end":275,"column_start":9,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12171,"byte_end":12174,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12183,"byte_end":12254,"line_start":277,"line_end":277,"column_start":9,"column_end":80}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12263,"byte_end":12325,"line_start":278,"line_end":278,"column_start":9,"column_end":71}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12334,"byte_end":12405,"line_start":279,"line_end":279,"column_start":9,"column_end":80}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12414,"byte_end":12495,"line_start":280,"line_end":280,"column_start":9,"column_end":90}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12504,"byte_end":12580,"line_start":281,"line_end":281,"column_start":9,"column_end":85}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12589,"byte_end":12640,"line_start":282,"line_end":282,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12649,"byte_end":12652,"line_start":283,"line_end":283,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12661,"byte_end":12700,"line_start":284,"line_end":284,"column_start":9,"column_end":48}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12709,"byte_end":12747,"line_start":285,"line_end":285,"column_start":9,"column_end":47}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12756,"byte_end":12759,"line_start":286,"line_end":286,"column_start":9,"column_end":12}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12768,"byte_end":12839,"line_start":287,"line_end":287,"column_start":9,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12848,"byte_end":12851,"line_start":288,"line_end":288,"column_start":9,"column_end":12}},{"value":"/ # Implementation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12860,"byte_end":12880,"line_start":289,"line_end":289,"column_start":9,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12889,"byte_end":12892,"line_start":290,"line_end":290,"column_start":9,"column_end":12}},{"value":"/ This function may not return errors of kind `WouldBlock` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12901,"byte_end":12964,"line_start":291,"line_end":291,"column_start":9,"column_end":72}},{"value":"/ `Interrupted`.  Implementations must convert `WouldBlock` into","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":12973,"byte_end":13039,"line_start":292,"line_end":292,"column_start":9,"column_end":75}},{"value":"/ `Poll::Pending` and either internally retry or convert","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13048,"byte_end":13106,"line_start":293,"line_end":293,"column_start":9,"column_end":67}},{"value":"/ `Interrupted` into another error kind.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13115,"byte_end":13157,"line_start":294,"line_end":294,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14157,"byte_end":14164,"line_start":313,"line_end":313,"column_start":12,"column_end":19},"name":"consume","qualname":"::if_std::AsyncBufRead::consume","value":"fn (self: Pin<&mut Self>, amt: usize) -> ()","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13272,"byte_end":13346,"line_start":298,"line_end":298,"column_start":9,"column_end":83}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13355,"byte_end":13422,"line_start":299,"line_end":299,"column_start":9,"column_end":76}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13431,"byte_end":13434,"line_start":300,"line_end":300,"column_start":9,"column_end":12}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13443,"byte_end":13514,"line_start":301,"line_end":301,"column_start":9,"column_end":80}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13523,"byte_end":13592,"line_start":302,"line_end":302,"column_start":9,"column_end":78}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13601,"byte_end":13675,"line_start":303,"line_end":303,"column_start":9,"column_end":83}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13684,"byte_end":13761,"line_start":304,"line_end":304,"column_start":9,"column_end":86}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13770,"byte_end":13840,"line_start":305,"line_end":305,"column_start":9,"column_end":79}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13849,"byte_end":13902,"line_start":306,"line_end":306,"column_start":9,"column_end":62}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13911,"byte_end":13914,"line_start":307,"line_end":307,"column_start":9,"column_end":12}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":13923,"byte_end":13995,"line_start":308,"line_end":308,"column_start":9,"column_end":81}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14004,"byte_end":14026,"line_start":309,"line_end":309,"column_start":9,"column_end":31}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14035,"byte_end":14038,"line_start":310,"line_end":310,"column_start":9,"column_end":12}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14047,"byte_end":14086,"line_start":311,"line_end":311,"column_start":9,"column_end":48}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14095,"byte_end":14145,"line_start":312,"line_end":312,"column_start":9,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14950,"byte_end":14953,"line_start":337,"line_end":337,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":15120,"byte_end":15123,"line_start":345,"line_end":345,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":17466,"byte_end":17469,"line_start":417,"line_end":417,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":17641,"byte_end":17644,"line_start":425,"line_end":425,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":19316,"byte_end":19319,"line_start":475,"line_end":475,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":19708,"byte_end":19711,"line_start":489,"line_end":489,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":19878,"byte_end":19881,"line_start":497,"line_end":497,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":20623,"byte_end":20626,"line_start":523,"line_end":523,"column_start":61,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":20810,"byte_end":20813,"line_start":531,"line_end":531,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":11668,"byte_end":11677,"line_start":266,"line_end":266,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":17},"to":{"krate":0,"index":27}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":14950,"byte_end":14953,"line_start":337,"line_end":337,"column_start":55,"column_end":58},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":15120,"byte_end":15123,"line_start":345,"line_end":345,"column_start":27,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":17466,"byte_end":17469,"line_start":417,"line_end":417,"column_start":57,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":17641,"byte_end":17644,"line_start":425,"line_end":425,"column_start":28,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":19316,"byte_end":19319,"line_start":475,"line_end":475,"column_start":25,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":3899},"to":{"krate":0,"index":20}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":19708,"byte_end":19711,"line_start":489,"line_end":489,"column_start":55,"column_end":58},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":25}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":19878,"byte_end":19881,"line_start":497,"line_end":497,"column_start":27,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":25}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":20623,"byte_end":20626,"line_start":523,"line_end":523,"column_start":61,"column_end":64},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":27}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-io-0.3.4/src/lib.rs","byte_start":20810,"byte_end":20813,"line_start":531,"line_end":531,"column_start":30,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":27}}]}