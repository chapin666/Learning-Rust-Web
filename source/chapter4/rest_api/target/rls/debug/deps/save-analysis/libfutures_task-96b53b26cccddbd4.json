{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4","program":"/Users/chengbin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_task","--edition=2018","/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=96b53b26cccddbd4","-C","extra-filename=-96b53b26cccddbd4","--out-dir","/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps","-L","dependency=/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/chengbin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps/libfutures_task-96b53b26cccddbd4.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[15790074320622313768,1594389429335229326]},"crate_root":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src","external_crates":[{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}}],"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":0,"byte_end":1760,"line_start":1,"line_end":57,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":10},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1059,"byte_end":1064,"line_start":30,"line_end":30,"column_start":24,"column_end":29},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1066,"byte_end":1076,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1078,"byte_end":1088,"line_start":30,"line_end":30,"column_start":43,"column_end":53},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1224,"byte_end":1231,"line_start":36,"line_end":36,"column_start":30,"column_end":37},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":274},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1335,"byte_end":1340,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":305},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1453,"byte_end":1462,"line_start":46,"line_end":46,"column_start":32,"column_end":41},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1464,"byte_end":1472,"line_start":46,"line_end":46,"column_start":43,"column_end":51},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":111},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1522,"byte_end":1531,"line_start":50,"line_end":50,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1533,"byte_end":1547,"line_start":50,"line_end":50,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1549,"byte_end":1564,"line_start":50,"line_end":50,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1611,"byte_end":1621,"line_start":53,"line_end":53,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1674,"byte_end":1688,"line_start":55,"line_end":55,"column_start":28,"column_end":42},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":7987},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1712,"byte_end":1719,"line_start":57,"line_end":57,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":31640},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1721,"byte_end":1725,"line_start":57,"line_end":57,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":7997},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1727,"byte_end":1732,"line_start":57,"line_end":57,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":31680},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1734,"byte_end":1742,"line_start":57,"line_end":57,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":31689},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":1744,"byte_end":1758,"line_start":57,"line_end":57,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":0,"byte_end":1760,"line_start":1,"line_end":57,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":63},{"krate":0,"index":258},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":307},{"krate":0,"index":67},{"krate":0,"index":222},{"krate":0,"index":226},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"! Tools for working with tasks.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":160,"byte_end":248,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/lib.rs","byte_start":416,"byte_end":437,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":10},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":1932,"byte_end":1937,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":1818,"byte_end":1893,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":1894,"byte_end":1921,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2257,"byte_end":2266,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"fn (&self, future: FutureObj<'static, ()>) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":1944,"byte_end":1995,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2000,"byte_end":2003,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2008,"byte_end":2020,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2025,"byte_end":2028,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2033,"byte_end":2099,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2104,"byte_end":2165,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2170,"byte_end":2234,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2239,"byte_end":2249,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2676,"byte_end":2682,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"fn (&self) -> Result<(), SpawnError>","parent":{"krate":0,"index":10},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2338,"byte_end":2401,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2406,"byte_end":2409,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2414,"byte_end":2476,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2481,"byte_end":2543,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2548,"byte_end":2611,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2616,"byte_end":2654,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2659,"byte_end":2668,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2859,"byte_end":2869,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2742,"byte_end":2815,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2816,"byte_end":2848,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3189,"byte_end":3204,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"fn (&self, future: LocalFutureObj<'static, ()>) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2876,"byte_end":2927,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2932,"byte_end":2935,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2940,"byte_end":2952,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2957,"byte_end":2960,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":2965,"byte_end":3031,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3036,"byte_end":3097,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3102,"byte_end":3166,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3171,"byte_end":3181,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3619,"byte_end":3631,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"fn (&self) -> Result<(), SpawnError>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3281,"byte_end":3344,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3349,"byte_end":3352,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3357,"byte_end":3419,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3424,"byte_end":3486,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3491,"byte_end":3554,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3559,"byte_end":3597,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3602,"byte_end":3611,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":16},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3746,"byte_end":3756,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3691,"byte_end":3734,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4255,"byte_end":4263,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4183,"byte_end":4243,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4392,"byte_end":4403,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4314,"byte_end":4380,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":260},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623391,"byte_end":7623398,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"ArcWake","qualname":"::arc_wake::ArcWake","value":"ArcWake: Send + Sync","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A way of waking up a specific task.","sig":null,"attributes":[{"value":"/ A way of waking up a specific task.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622618,"byte_end":7622657,"line_start":3,"line_end":3,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622658,"byte_end":7622661,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing this trait, types that are expected to be wrapped in an `Arc`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622662,"byte_end":7622743,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ can be converted into [`Waker`] objects.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622744,"byte_end":7622788,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/ Those Wakers can be used to signal executors that a task it owns","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622789,"byte_end":7622857,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ is ready to be `poll`ed again.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622858,"byte_end":7622892,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622893,"byte_end":7622896,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two ways to convert `ArcWake` into [`Waker`]:","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622897,"byte_end":7622967,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622968,"byte_end":7622971,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`waker`](super::waker()) converts `Arc<impl ArcWake>` into [`Waker`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7622972,"byte_end":7623048,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ * [`waker_ref`](super::waker_ref()) converts `&Arc<impl ArcWake>` into [`WakerRef`] that","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623049,"byte_end":7623141,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/   provides access to a [`&Waker`][`Waker`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623142,"byte_end":7623189,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623190,"byte_end":7623193,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623194,"byte_end":7623225,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ [`WakerRef`]: super::WakerRef","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623226,"byte_end":7623259,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623850,"byte_end":7623854,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"wake","qualname":"::arc_wake::ArcWake::wake","value":"fn (self: Arc<Self>) -> ()","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623418,"byte_end":7623493,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623498,"byte_end":7623514,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623519,"byte_end":7623522,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623527,"byte_end":7623608,"line_start":24,"line_end":24,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623613,"byte_end":7623662,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623667,"byte_end":7623670,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake` should place","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623675,"byte_end":7623753,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623758,"byte_end":7623798,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623803,"byte_end":7623806,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623811,"byte_end":7623842,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624482,"byte_end":7624493,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"wake_by_ref","qualname":"::arc_wake::ArcWake::wake_by_ref","value":"fn (arc_self: &Arc<Self>) -> ()","parent":{"krate":0,"index":260},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623918,"byte_end":7623993,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623998,"byte_end":7624014,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624019,"byte_end":7624022,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624027,"byte_end":7624108,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624113,"byte_end":7624162,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624167,"byte_end":7624170,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake_by_ref` should place","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624175,"byte_end":7624260,"line_start":41,"line_end":41,"column_start":5,"column_end":90}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624265,"byte_end":7624305,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624310,"byte_end":7624313,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`wake`](ArcWake::wake), but must not consume the provided data","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624318,"byte_end":7624413,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ pointer.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624418,"byte_end":7624430,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624435,"byte_end":7624438,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7624443,"byte_end":7624474,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":274},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker.rs","byte_start":7625010,"byte_end":7625015,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"waker","qualname":"::waker::waker","value":"fn <W> (wake: Arc<W>) -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Waker`] from an `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a [`Waker`] from an `Arc<impl ArcWake>`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker.rs","byte_start":7624860,"byte_end":7624912,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker.rs","byte_start":7624913,"byte_end":7624916,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned [`Waker`] will call","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker.rs","byte_start":7624917,"byte_end":7624953,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker.rs","byte_start":7624954,"byte_end":7625002,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626831,"byte_end":7626839,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"WakerRef","qualname":"::waker_ref::WakerRef","value":"WakerRef {  }","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":" A [`Waker`] that is only valid for a given lifetime.","sig":null,"attributes":[{"value":"/ A [`Waker`] that is only valid for a given lifetime.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626626,"byte_end":7626682,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626683,"byte_end":7626686,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note: this type implements [`Deref<Target = Waker>`](std::ops::Deref),","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626687,"byte_end":7626761,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ so it can be used to get a `&Waker`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626762,"byte_end":7626802,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627012,"byte_end":7627015,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<WakerRef>::new","value":"fn (waker: &'a Waker) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] reference.\n","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] reference.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626943,"byte_end":7627000,"line_start":20,"line_end":20,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627667,"byte_end":7627678,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"new_unowned","qualname":"<WakerRef>::new_unowned","value":"fn (waker: ManuallyDrop<Waker>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627327,"byte_end":7627399,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627404,"byte_end":7627407,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note: this if for rare cases where the caller created a [`Waker`] in","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627412,"byte_end":7627484,"line_start":33,"line_end":33,"column_start":5,"column_end":77}},{"value":"/ an unsafe way (that will be valid only for a lifetime to be determined","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627489,"byte_end":7627563,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ by the caller), and the [`Waker`] doesn't need to or must not be","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627568,"byte_end":7627636,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/ destroyed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627641,"byte_end":7627655,"line_start":36,"line_end":36,"column_start":5,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":305},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7628113,"byte_end":7628122,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"waker_ref","qualname":"::waker_ref::waker_ref","value":"fn <W> (wake: &Arc<W>) -> WakerRef<'_>","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627925,"byte_end":7628004,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7628005,"byte_end":7628008,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The resulting [`Waker`] will call","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7628009,"byte_end":7628046,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7628047,"byte_end":7628095,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7628096,"byte_end":7628105,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":8014,"byte_end":8028,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":7725,"byte_end":7787,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":7788,"byte_end":7827,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":7828,"byte_end":7831,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":7832,"byte_end":7910,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":7911,"byte_end":7988,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":7989,"byte_end":8002,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9031,"byte_end":9034,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"fn <F> (f: F) -> LocalFutureObj<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":8933,"byte_end":9005,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9010,"byte_end":9019,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9610,"byte_end":9625,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"fn (self) -> FutureObj<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9312,"byte_end":9365,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9370,"byte_end":9373,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9378,"byte_end":9390,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9395,"byte_end":9398,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9403,"byte_end":9479,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9484,"byte_end":9550,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9555,"byte_end":9577,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9582,"byte_end":9591,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":111},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10857,"byte_end":10866,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10416,"byte_end":10478,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10479,"byte_end":10525,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10526,"byte_end":10529,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10530,"byte_end":10608,"line_start":102,"line_end":102,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10609,"byte_end":10686,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10687,"byte_end":10700,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10701,"byte_end":10704,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10705,"byte_end":10783,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10784,"byte_end":10845,"line_start":107,"line_end":107,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11110,"byte_end":11113,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"fn <F> (f: F) -> FutureObj<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11017,"byte_end":11084,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11089,"byte_end":11098,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":132},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11993,"byte_end":12008,"line_start":147,"line_end":147,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11596,"byte_end":11675,"line_start":137,"line_end":137,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11676,"byte_end":11707,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11708,"byte_end":11711,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11712,"byte_end":11787,"line_start":140,"line_end":140,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11788,"byte_end":11854,"line_start":141,"line_end":141,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11855,"byte_end":11858,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11859,"byte_end":11871,"line_start":143,"line_end":143,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11872,"byte_end":11875,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11876,"byte_end":11945,"line_start":145,"line_end":145,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11946,"byte_end":11975,"line_start":146,"line_end":146,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12453,"byte_end":12461,"line_start":158,"line_end":158,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"fn (self) -> *mut (dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12026,"byte_end":12096,"line_start":148,"line_end":148,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12101,"byte_end":12104,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12109,"byte_end":12121,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12126,"byte_end":12129,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12134,"byte_end":12152,"line_start":152,"line_end":152,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12157,"byte_end":12160,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12165,"byte_end":12236,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12241,"byte_end":12312,"line_start":155,"line_end":155,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12317,"byte_end":12388,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12393,"byte_end":12445,"line_start":157,"line_end":157,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":13139,"byte_end":13143,"line_start":178,"line_end":178,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"fn (ptr: *mut (dyn Future<Output = T> + 'a)) -> ()","parent":{"krate":0,"index":132},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12512,"byte_end":12570,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12575,"byte_end":12578,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12583,"byte_end":12595,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12600,"byte_end":12603,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12608,"byte_end":12626,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12631,"byte_end":12634,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12639,"byte_end":12708,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12713,"byte_end":12757,"line_start":167,"line_end":167,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12762,"byte_end":12765,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12770,"byte_end":12783,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12788,"byte_end":12791,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12796,"byte_end":12823,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12828,"byte_end":12831,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12836,"byte_end":12909,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12914,"byte_end":12943,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":12948,"byte_end":13024,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":13029,"byte_end":13048,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":13053,"byte_end":13124,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19060,"byte_end":19070,"line_start":31,"line_end":31,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"fn () -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18840,"byte_end":18877,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18878,"byte_end":18920,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18921,"byte_end":18924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18925,"byte_end":18939,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18940,"byte_end":18943,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18944,"byte_end":18951,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18952,"byte_end":18986,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":18987,"byte_end":19016,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19017,"byte_end":19034,"line_start":28,"line_end":28,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19035,"byte_end":19042,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19043,"byte_end":19052,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":238},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19422,"byte_end":19436,"line_start":49,"line_end":49,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::noop_waker::noop_waker_ref","value":"fn () -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19148,"byte_end":19195,"line_start":37,"line_end":37,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19196,"byte_end":19243,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19244,"byte_end":19247,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19248,"byte_end":19262,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19263,"byte_end":19266,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19267,"byte_end":19274,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19275,"byte_end":19313,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19314,"byte_end":19347,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19348,"byte_end":19372,"line_start":45,"line_end":45,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19373,"byte_end":19380,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19381,"byte_end":19390,"line_start":47,"line_end":47,"column_start":1,"column_end":10}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/noop_waker.rs","byte_start":19391,"byte_end":19414,"line_start":48,"line_end":48,"column_start":1,"column_end":24}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3797,"byte_end":3807,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3968,"byte_end":3978,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4146,"byte_end":4156,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4166,"byte_end":4176,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":5671,"byte_end":5674,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":5968,"byte_end":5971,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":6284,"byte_end":6286,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":6580,"byte_end":6582,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":6963,"byte_end":6966,"line_start":174,"line_end":174,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":7292,"byte_end":7295,"line_start":184,"line_end":184,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626924,"byte_end":7626932,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627823,"byte_end":7627831,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":8431,"byte_end":8445,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":8905,"byte_end":8919,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9710,"byte_end":9724,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9908,"byte_end":9922,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10046,"byte_end":10060,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10291,"byte_end":10305,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10917,"byte_end":10926,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10961,"byte_end":10970,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10994,"byte_end":11003,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11250,"byte_end":11259,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11418,"byte_end":11427,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":13798,"byte_end":13801,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":14109,"byte_end":14112,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":14505,"byte_end":14508,"line_start":226,"line_end":226,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":14852,"byte_end":14855,"line_start":238,"line_end":238,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":15170,"byte_end":15173,"line_start":248,"line_end":248,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":15494,"byte_end":15497,"line_start":258,"line_end":258,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":15948,"byte_end":15951,"line_start":273,"line_end":273,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":16379,"byte_end":16382,"line_start":285,"line_end":285,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":16829,"byte_end":16838,"line_start":297,"line_end":297,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17005,"byte_end":17014,"line_start":303,"line_end":303,"column_start":65,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17222,"byte_end":17231,"line_start":309,"line_end":309,"column_start":72,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17408,"byte_end":17417,"line_start":315,"line_end":315,"column_start":70,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17618,"byte_end":17632,"line_start":321,"line_end":321,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17797,"byte_end":17811,"line_start":327,"line_end":327,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":18010,"byte_end":18024,"line_start":333,"line_end":333,"column_start":65,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":18199,"byte_end":18213,"line_start":339,"line_end":339,"column_start":63,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3797,"byte_end":3807,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":3968,"byte_end":3978,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":16},"to":{"krate":2,"index":5921}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4146,"byte_end":4156,"line_start":72,"line_end":72,"column_start":28,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":16},"to":{"krate":1,"index":1620}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":4166,"byte_end":4176,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":16},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":5671,"byte_end":5674,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":10}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":5968,"byte_end":5971,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":6284,"byte_end":6286,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":2760},"to":{"krate":0,"index":10}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":6580,"byte_end":6582,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":2760},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":6963,"byte_end":6966,"line_start":174,"line_end":174,"column_start":44,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":3604},"to":{"krate":0,"index":10}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/spawn.rs","byte_start":7292,"byte_end":7295,"line_start":184,"line_end":184,"column_start":54,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":3604},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623400,"byte_end":7623404,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1852},"to":{"krate":0,"index":260}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/arc_wake.rs","byte_start":7623407,"byte_end":7623411,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1864},"to":{"krate":0,"index":260}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7626924,"byte_end":7626932,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/waker_ref.rs","byte_start":7627823,"byte_end":7627831,"line_start":45,"line_end":45,"column_start":16,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":2023}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":8431,"byte_end":8445,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":8905,"byte_end":8919,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9710,"byte_end":9724,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":9908,"byte_end":9922,"line_start":73,"line_end":73,"column_start":40,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10046,"byte_end":10060,"line_start":80,"line_end":80,"column_start":20,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10291,"byte_end":10305,"line_start":91,"line_end":91,"column_start":18,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10917,"byte_end":10926,"line_start":110,"line_end":110,"column_start":19,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1891}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10961,"byte_end":10970,"line_start":111,"line_end":111,"column_start":25,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":10994,"byte_end":11003,"line_start":113,"line_end":113,"column_start":13,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11250,"byte_end":11259,"line_start":121,"line_end":121,"column_start":24,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":11418,"byte_end":11427,"line_start":128,"line_end":128,"column_start":20,"column_end":29},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":7916}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":13798,"byte_end":13801,"line_start":201,"line_end":201,"column_start":50,"column_end":53},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":14109,"byte_end":14112,"line_start":212,"line_end":212,"column_start":47,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":14505,"byte_end":14508,"line_start":226,"line_end":226,"column_start":54,"column_end":57},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":14852,"byte_end":14855,"line_start":238,"line_end":238,"column_start":55,"column_end":58},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":15170,"byte_end":15173,"line_start":248,"line_end":248,"column_start":55,"column_end":58},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":15494,"byte_end":15497,"line_start":258,"line_end":258,"column_start":54,"column_end":57},"kind":{"Impl":{"id":28}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":15948,"byte_end":15951,"line_start":273,"line_end":273,"column_start":55,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":16379,"byte_end":16382,"line_start":285,"line_end":285,"column_start":55,"column_end":58},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":132}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":16829,"byte_end":16838,"line_start":297,"line_end":297,"column_start":67,"column_end":76},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17005,"byte_end":17014,"line_start":303,"line_end":303,"column_start":65,"column_end":74},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17222,"byte_end":17231,"line_start":309,"line_end":309,"column_start":72,"column_end":81},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17408,"byte_end":17417,"line_start":315,"line_end":315,"column_start":70,"column_end":79},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":111},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17618,"byte_end":17632,"line_start":321,"line_end":321,"column_start":60,"column_end":74},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":17797,"byte_end":17811,"line_start":327,"line_end":327,"column_start":58,"column_end":72},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":18010,"byte_end":18024,"line_start":333,"line_end":333,"column_start":65,"column_end":79},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1776}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.4/src/future_obj.rs","byte_start":18199,"byte_end":18213,"line_start":339,"line_end":339,"column_start":63,"column_end":77},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":1776}}]}