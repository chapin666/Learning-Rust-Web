{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4","program":"/Users/chengbin/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_core","--edition=2018","/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b48a9c1c3be203f5","-C","extra-filename=-b48a9c1c3be203f5","--out-dir","/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps","-L","dependency=/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/chengbin/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/chengbin/Source/rust/Learning-Rust-Web/source/chapter4/rest_api/target/rls/debug/deps/libfutures_core-b48a9c1c3be203f5.rmeta"},"prelude":{"crate_id":{"name":"futures_core","disambiguator":[7001366758905092501,11004721139566071535]},"crate_root":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src","external_crates":[{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9606925100264359032,12531971508192552739]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","num":2,"id":{"name":"core","disambiguator":[17187672715010298091,8744209918715530773]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15887813922859449425,14244592339943736272]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6807992320260993406,9894278173044996986]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17858480672457447890,14967053264370168355]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[1320274826319993033,12580344779796895143]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5371179889215182298,2673167689761608764]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3578723082929147264,11802062942665263000]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[12064590987128239469,16657797211233097221]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[9585105124653066898,10355053755662228341]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[168442059660610991,16640229565854074068]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13744766486950275495,4356178648036430150]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4695427281829409190,666464352563047434]}},{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[825342386373460966,7285997970727292365]}}],"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":0,"byte_end":1179,"line_start":1,"line_end":36,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":7916},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1296,"byte_end":1302,"line_start":7,"line_end":7,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":2,"index":7916},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":930,"byte_end":936,"line_start":23,"line_end":23,"column_start":39,"column_end":45},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":938,"byte_end":949,"line_start":23,"line_end":23,"column_start":47,"column_end":58},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":951,"byte_end":960,"line_start":23,"line_end":23,"column_start":60,"column_end":69},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":68},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1018,"byte_end":1024,"line_start":26,"line_end":26,"column_start":39,"column_end":45},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":82},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1026,"byte_end":1037,"line_start":26,"line_end":26,"column_start":47,"column_end":58},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1039,"byte_end":1048,"line_start":26,"line_end":26,"column_start":60,"column_end":69},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/mod.rs","byte_start":12785,"byte_end":12796,"line_start":4,"line_end":4,"column_start":29,"column_end":40},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":132}},{"kind":"Use","ref_id":{"krate":2,"index":7987},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12144,"byte_end":12151,"line_start":9,"line_end":9,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":31640},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12153,"byte_end":12157,"line_start":9,"line_end":9,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":7997},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12159,"byte_end":12164,"line_start":9,"line_end":9,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":31680},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12166,"byte_end":12174,"line_start":9,"line_end":9,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":129}},{"kind":"Use","ref_id":{"krate":2,"index":31689},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12176,"byte_end":12190,"line_start":9,"line_end":9,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":129}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1175,"byte_end":1176,"line_start":35,"line_end":35,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":168}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":0,"byte_end":1179,"line_start":1,"line_end":36,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":168}],"decl_id":null,"docs":" Core traits and types for asynchronous operations in Rust.\n","sig":null,"attributes":[{"value":"! Core traits and types for asynchronous operations in Rust.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":189,"byte_end":277,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":445,"byte_end":466,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":32},{"krate":0,"index":36},{"krate":0,"index":43}],"decl_id":null,"docs":" Futures.\n","sig":null,"attributes":[{"value":"! Futures.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1181,"byte_end":1193,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":11},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1480,"byte_end":1489,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Future`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Future`] for use in cases where you can't","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1305,"byte_end":1379,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1380,"byte_end":1444,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1445,"byte_end":1470,"line_start":11,"line_end":11,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1648,"byte_end":1662,"line_start":16,"line_end":16,"column_start":10,"column_end":24},"name":"LocalBoxFuture","qualname":"::future::LocalBoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxFuture`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxFuture`, but without the `Send` requirement.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1560,"byte_end":1612,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1613,"byte_end":1638,"line_start":15,"line_end":15,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":17},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2189,"byte_end":2200,"line_start":26,"line_end":26,"column_start":11,"column_end":22},"name":"FusedFuture","qualname":"::future::FusedFuture","value":"FusedFuture: Future","parent":null,"children":[{"krate":0,"index":18}],"decl_id":null,"docs":" A future which tracks whether or not the underlying future\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A future which tracks whether or not the underlying future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1726,"byte_end":1788,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1789,"byte_end":1820,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1821,"byte_end":1824,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1825,"byte_end":1903,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll` (or `try_poll`) returned","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1904,"byte_end":1972,"line_start":22,"line_end":22,"column_start":1,"column_end":69}},{"value":"/ `Poll::Ready`. However, `is_terminated` may also return `true` if a future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":1973,"byte_end":2051,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ has become inactive and can no longer make progress and should be ignored","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2052,"byte_end":2129,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ or dropped rather than being `poll`ed again.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2130,"byte_end":2178,"line_start":25,"line_end":25,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2294,"byte_end":2307,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::future::FusedFuture::is_terminated","value":"fn (&self) -> bool","parent":{"krate":0,"index":17},"children":[],"decl_id":null,"docs":" Returns `true` if the underlying future should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the underlying future should no longer be polled.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2215,"byte_end":2286,"line_start":27,"line_end":27,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2749,"byte_end":2755,"line_start":50,"line_end":50,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::future::private_try_future::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2979,"byte_end":2988,"line_start":57,"line_end":57,"column_start":11,"column_end":20},"name":"TryFuture","qualname":"::future::TryFuture","value":"TryFuture: Future + private_try_future::Sealed","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" A convenience for futures that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for futures that return `Result` values that includes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2845,"byte_end":2916,"line_start":55,"line_end":55,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2917,"byte_end":2968,"line_start":56,"line_end":56,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3098,"byte_end":3100,"line_start":59,"line_end":59,"column_start":10,"column_end":12},"name":"Ok","qualname":"::future::TryFuture::Ok","value":"type Ok;","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3032,"byte_end":3088,"line_start":58,"line_end":58,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3164,"byte_end":3169,"line_start":62,"line_end":62,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::TryFuture::Error","value":"type Error;","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3107,"byte_end":3154,"line_start":61,"line_end":61,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3419,"byte_end":3427,"line_start":69,"line_end":69,"column_start":8,"column_end":16},"name":"try_poll","qualname":"::future::TryFuture::try_poll","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" Poll this `TryFuture` as if it were a `Future`.","sig":null,"attributes":[{"value":"/ Poll this `TryFuture` as if it were a `Future`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3176,"byte_end":3227,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3232,"byte_end":3235,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3240,"byte_end":3316,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Future` trait; in the future it won't be","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3321,"byte_end":3395,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3400,"byte_end":3411,"line_start":68,"line_end":68,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":56},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":72},{"krate":0,"index":77},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":97},{"krate":0,"index":101},{"krate":0,"index":108}],"decl_id":null,"docs":" Asynchronous streams.\n","sig":null,"attributes":[{"value":"! Asynchronous streams.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4273,"byte_end":4298,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":62},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4554,"byte_end":4563,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::stream::BoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Stream`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Stream`] for use in cases where you can't","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4379,"byte_end":4453,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4454,"byte_end":4518,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4519,"byte_end":4544,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4720,"byte_end":4734,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"LocalBoxStream","qualname":"::stream::LocalBoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxStream`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxStream`, but without the `Send` requirement.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4632,"byte_end":4684,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4685,"byte_end":4710,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5341,"byte_end":5347,"line_start":27,"line_end":27,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" A stream of values produced asynchronously.","sig":null,"attributes":[{"value":"/ A stream of values produced asynchronously.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4796,"byte_end":4843,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4844,"byte_end":4847,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If `Future<Output = T>` is an asynchronous version of `T`, then `Stream<Item","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4848,"byte_end":4928,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ = T>` is an asynchronous version of `Iterator<Item = T>`. A stream","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":4929,"byte_end":4999,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ represents a sequence of value-producing events that occur asynchronously to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5000,"byte_end":5080,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5081,"byte_end":5096,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5097,"byte_end":5100,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The trait is modeled after `Future`, but allows `poll_next` to be called","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5101,"byte_end":5177,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ even after a value has been produced, yielding `None` once the stream has","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5178,"byte_end":5255,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ been fully exhausted.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5256,"byte_end":5281,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5282,"byte_end":5330,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":69},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5397,"byte_end":5401,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Values yielded by the stream.\n","sig":null,"attributes":[{"value":"/ Values yielded by the stream.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5354,"byte_end":5387,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6635,"byte_end":6644,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::stream::Stream::poll_next","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the stream is exhausted.","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of this stream, registering the","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5408,"byte_end":5478,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5483,"byte_end":5559,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ `None` if the stream is exhausted.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5564,"byte_end":5602,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5607,"byte_end":5610,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5615,"byte_end":5633,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5638,"byte_end":5641,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values, each indicating a distinct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5646,"byte_end":5718,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ stream state:","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5723,"byte_end":5740,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5745,"byte_end":5748,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Pending` means that this stream's next value is not ready","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5753,"byte_end":5823,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ yet. Implementations will ensure that the current task will be notified","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5828,"byte_end":5903,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ when the next value may be ready.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5908,"byte_end":5945,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5950,"byte_end":5953,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Some(val))` means that the stream has successfully","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":5958,"byte_end":6027,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ produced a value, `val`, and may produce further values on subsequent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6032,"byte_end":6105,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ `poll_next` calls.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6110,"byte_end":6132,"line_start":46,"line_end":46,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6137,"byte_end":6140,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(None)` means that the stream has terminated, and","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6145,"byte_end":6212,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ `poll_next` should not be invoked again.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6217,"byte_end":6261,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6266,"byte_end":6269,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6274,"byte_end":6286,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6291,"byte_end":6294,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Once a stream is finished, i.e. `Ready(None)` has been returned, further","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6299,"byte_end":6375,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/ calls to `poll_next` may result in a panic or other \"bad behavior\".  If","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6380,"byte_end":6455,"line_start":54,"line_end":54,"column_start":5,"column_end":80}},{"value":"/ this is difficult to guard against then the `fuse` adapter can be used","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6460,"byte_end":6534,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ to ensure that `poll_next` always returns `Ready(None)` in subsequent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6539,"byte_end":6612,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ calls.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6617,"byte_end":6627,"line_start":57,"line_end":57,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8052,"byte_end":8061,"line_start":90,"line_end":90,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::stream::Stream::size_hint","value":"fn (&self) -> (usize, Option<usize>)","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Returns the bounds on the remaining length of the stream.","sig":null,"attributes":[{"value":"/ Returns the bounds on the remaining length of the stream.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6746,"byte_end":6807,"line_start":63,"line_end":63,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6812,"byte_end":6815,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Specifically, `size_hint()` returns a tuple where the first element","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6820,"byte_end":6891,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ is the lower bound, and the second element is the upper bound.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6896,"byte_end":6962,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6967,"byte_end":6970,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The second half of the tuple that is returned is an [`Option`]`<`[`usize`]`>`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":6975,"byte_end":7057,"line_start":68,"line_end":68,"column_start":5,"column_end":87}},{"value":"/ A [`None`] here means that either there is no known upper bound, or the","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7062,"byte_end":7137,"line_start":69,"line_end":69,"column_start":5,"column_end":80}},{"value":"/ upper bound is larger than [`usize`].","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7142,"byte_end":7183,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7188,"byte_end":7191,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Implementation notes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7196,"byte_end":7222,"line_start":72,"line_end":72,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7227,"byte_end":7230,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ It is not enforced that a stream implementation yields the declared","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7235,"byte_end":7306,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ number of elements. A buggy stream may yield less than the lower bound","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7311,"byte_end":7385,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ or more than the upper bound of elements.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7390,"byte_end":7435,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7440,"byte_end":7443,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ `size_hint()` is primarily intended to be used for optimizations such as","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7448,"byte_end":7524,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ reserving space for the elements of the stream, but must not be","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7529,"byte_end":7596,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"/ trusted to e.g., omit bounds checks in unsafe code. An incorrect","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7601,"byte_end":7669,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ implementation of `size_hint()` should not lead to memory safety","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7674,"byte_end":7742,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ violations.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7747,"byte_end":7762,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7767,"byte_end":7770,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ That said, the implementation should provide a correct estimation,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7775,"byte_end":7845,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ because otherwise it would be a violation of the trait's protocol.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7850,"byte_end":7920,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7925,"byte_end":7928,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `(0, `[`None`]`)` which is correct for any","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":7933,"byte_end":8014,"line_start":87,"line_end":87,"column_start":5,"column_end":86}},{"value":"/ stream.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8019,"byte_end":8030,"line_start":88,"line_end":88,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8035,"byte_end":8044,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9328,"byte_end":9339,"line_start":137,"line_end":137,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[{"krate":0,"index":83}],"decl_id":null,"docs":" A stream which tracks whether or not the underlying stream\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A stream which tracks whether or not the underlying stream","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8851,"byte_end":8913,"line_start":129,"line_end":129,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8914,"byte_end":8945,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8946,"byte_end":8949,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8950,"byte_end":9028,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll_next` (or `try_poll_next`) returned","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9029,"byte_end":9107,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ `Poll::Ready(None)`. However, `is_terminated` may also return `true` if a","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9108,"byte_end":9185,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/ stream has become inactive and can no longer make progress and should be","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9186,"byte_end":9262,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ ignored or dropped rather than being polled again.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9263,"byte_end":9317,"line_start":136,"line_end":136,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9422,"byte_end":9435,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::stream::FusedStream::is_terminated","value":"fn (&self) -> bool","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns `true` if the stream should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stream should no longer be polled.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9354,"byte_end":9414,"line_start":138,"line_end":138,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9877,"byte_end":9883,"line_start":161,"line_end":161,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::private_try_stream::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10105,"byte_end":10114,"line_start":168,"line_end":168,"column_start":11,"column_end":20},"name":"TryStream","qualname":"::stream::TryStream","value":"TryStream: Stream + private_try_stream::Sealed","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" A convenience for streams that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for streams that return `Result` values that includes","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9971,"byte_end":10042,"line_start":166,"line_end":166,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10043,"byte_end":10094,"line_start":167,"line_end":167,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":98},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10224,"byte_end":10226,"line_start":170,"line_end":170,"column_start":10,"column_end":12},"name":"Ok","qualname":"::stream::TryStream::Ok","value":"type Ok;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10158,"byte_end":10214,"line_start":169,"line_end":169,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":99},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10290,"byte_end":10295,"line_start":173,"line_end":173,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::TryStream::Error","value":"type Error;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10233,"byte_end":10280,"line_start":172,"line_end":172,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10545,"byte_end":10558,"line_start":180,"line_end":180,"column_start":8,"column_end":21},"name":"try_poll_next","qualname":"::stream::TryStream::try_poll_next","value":"fn (self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Poll this `TryStream` as if it were a `Stream`.","sig":null,"attributes":[{"value":"/ Poll this `TryStream` as if it were a `Stream`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10302,"byte_end":10353,"line_start":175,"line_end":175,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10358,"byte_end":10361,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10366,"byte_end":10442,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Stream` trait; in the future it won't be","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10447,"byte_end":10521,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10526,"byte_end":10537,"line_start":179,"line_end":179,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":129},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":162}],"decl_id":null,"docs":" Task notification.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1052,"byte_end":1064,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"! Task notification.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12039,"byte_end":12061,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":132},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__internal","qualname":"::task::__internal","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/mod.rs","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":161}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15700,"byte_end":15711,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"AtomicWaker","qualname":"::task::__internal::atomic_waker::AtomicWaker","value":"AtomicWaker {  }","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task wakeup.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":12965,"byte_end":13013,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13014,"byte_end":13017,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Sometimes the task interested in a given event will change over time.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13018,"byte_end":13091,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ An `AtomicWaker` can coordinate concurrent notifications with the consumer","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13092,"byte_end":13170,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ potentially \"updating\" the underlying task to wake up. This is useful in","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13171,"byte_end":13247,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ scenarios where a computation completes in another thread and wants to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13248,"byte_end":13322,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ notify the consumer, but the consumer is in the process of being migrated to","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13323,"byte_end":13403,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ a new logical task.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13404,"byte_end":13427,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13428,"byte_end":13431,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consumers should call `register` before checking the result of a computation","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13432,"byte_end":13512,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ and producers should call `wake` after producing the computation (this","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13513,"byte_end":13587,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ differs from the usual `thread::park` pattern). It is also permitted for","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13588,"byte_end":13664,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `wake` to be called **before** `register`. This results in a no-op.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13665,"byte_end":13736,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13737,"byte_end":13740,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A single `AtomicWaker` may be reused for any number of calls to `register` or","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13741,"byte_end":13822,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ `wake`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13823,"byte_end":13834,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13835,"byte_end":13838,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Memory ordering","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13839,"byte_end":13860,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13861,"byte_end":13864,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Calling `register` \"acquires\" all memory \"released\" by calls to `wake`","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13865,"byte_end":13939,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ before the call to `register`.  Later calls to `wake` will wake the","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":13940,"byte_end":14011,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ registered waker (on contention this wake might be triggered in `register`).","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14012,"byte_end":14092,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14093,"byte_end":14096,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For concurrent calls to `register` (should be avoided) the ordering is only","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14097,"byte_end":14176,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ guaranteed for the winning call.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14177,"byte_end":14213,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14214,"byte_end":14217,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14218,"byte_end":14232,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14233,"byte_end":14236,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example providing a `Flag` that can be signalled manually","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14237,"byte_end":14315,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ when it is ready.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14316,"byte_end":14337,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14338,"byte_end":14341,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14342,"byte_end":14349,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use futures::future::Future;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14350,"byte_end":14382,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14383,"byte_end":14435,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14436,"byte_end":14459,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14460,"byte_end":14498,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14499,"byte_end":14544,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14545,"byte_end":14567,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14568,"byte_end":14571,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ struct Inner {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14572,"byte_end":14590,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14591,"byte_end":14618,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/     set: AtomicBool,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14619,"byte_end":14643,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14644,"byte_end":14649,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14650,"byte_end":14653,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14654,"byte_end":14674,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ struct Flag(Arc<Inner>);","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14675,"byte_end":14703,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14704,"byte_end":14707,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Flag {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14708,"byte_end":14723,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     pub fn new() -> Self {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14724,"byte_end":14754,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/         Flag(Arc::new(Inner {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14755,"byte_end":14788,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/             waker: AtomicWaker::new(),","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14789,"byte_end":14831,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/             set: AtomicBool::new(false),","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14832,"byte_end":14876,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/         }))","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14877,"byte_end":14892,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14893,"byte_end":14902,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14903,"byte_end":14906,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     pub fn signal(&self) {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14907,"byte_end":14937,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/         self.0.set.store(true, Relaxed);","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14938,"byte_end":14982,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/         self.0.waker.wake();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":14983,"byte_end":15015,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15016,"byte_end":15025,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15026,"byte_end":15031,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15032,"byte_end":15035,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Future for Flag {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15036,"byte_end":15062,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/     type Output = ();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15063,"byte_end":15088,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15089,"byte_end":15092,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15093,"byte_end":15166,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/         // quick check to avoid registration if already done.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15167,"byte_end":15232,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15233,"byte_end":15274,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/             return Poll::Ready(());","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15275,"byte_end":15314,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15315,"byte_end":15328,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15329,"byte_end":15332,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         self.0.waker.register(cx.waker());","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15333,"byte_end":15379,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15380,"byte_end":15383,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         // Need to check condition **after** `register` to avoid a race","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15384,"byte_end":15459,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/         // condition that would result in lost notifications.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15460,"byte_end":15525,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15526,"byte_end":15567,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/             Poll::Ready(())","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15568,"byte_end":15599,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15600,"byte_end":15620,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/             Poll::Pending","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15621,"byte_end":15650,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/         }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15651,"byte_end":15664,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15665,"byte_end":15674,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15675,"byte_end":15680,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":15681,"byte_end":15688,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20776,"byte_end":20779,"line_start":200,"line_end":200,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicWaker>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicWaker`.\n","sig":null,"attributes":[{"value":"/ Create an `AtomicWaker`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20730,"byte_end":20758,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":23072,"byte_end":23080,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicWaker>::register","value":"fn (&self, waker: &Waker) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[{"value":"/ Registers the waker to be notified on calls to `wake`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21034,"byte_end":21092,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21097,"byte_end":21100,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The new task will take place of any previous tasks that were registered","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21105,"byte_end":21180,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ by previous calls to `register`. Any calls to `wake` that happen after","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21185,"byte_end":21259,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ a call to `register` (as defined by the memory ordering rules), will","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21264,"byte_end":21336,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/ notify the `register` caller's task and deregister the waker from future","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21341,"byte_end":21417,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ notifications. Because of this, callers should ensure `register` gets","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21422,"byte_end":21495,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ invoked with a new `Waker` **each** time they require a wakeup.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21500,"byte_end":21567,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21572,"byte_end":21575,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is safe to call `register` with multiple other threads concurrently","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21580,"byte_end":21654,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ calling `wake`. This will result in the `register` caller's current","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21659,"byte_end":21730,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ task being notified once.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21735,"byte_end":21764,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21769,"byte_end":21772,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function is safe to call concurrently, but this is generally a bad","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21777,"byte_end":21852,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ idea. Concurrent calls to `register` will attempt to register different","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21857,"byte_end":21932,"line_start":225,"line_end":225,"column_start":5,"column_end":80}},{"value":"/ tasks to be notified. One of the callers will win and have its task set,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":21937,"byte_end":22013,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ but there is no guarantee as to which caller will succeed.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22018,"byte_end":22080,"line_start":227,"line_end":227,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22085,"byte_end":22088,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22093,"byte_end":22107,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22112,"byte_end":22115,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Here is how `register` is used when implementing a flag.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22120,"byte_end":22180,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22185,"byte_end":22188,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22193,"byte_end":22200,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use futures::future::Future;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22205,"byte_end":22237,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22242,"byte_end":22294,"line_start":235,"line_end":235,"column_start":5,"column_end":57}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22299,"byte_end":22337,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22342,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22392,"byte_end":22414,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22419,"byte_end":22422,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ struct Flag {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22427,"byte_end":22444,"line_start":240,"line_end":240,"column_start":5,"column_end":22}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22449,"byte_end":22476,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/     set: AtomicBool,","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22481,"byte_end":22505,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22510,"byte_end":22515,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22520,"byte_end":22523,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ impl Future for Flag {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22528,"byte_end":22554,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/     type Output = ();","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22559,"byte_end":22584,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22589,"byte_end":22592,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22597,"byte_end":22670,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/         // Register **before** checking `set` to avoid a race condition","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22675,"byte_end":22750,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/         // that would result in lost notifications.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22755,"byte_end":22810,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/         self.waker.register(cx.waker());","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22815,"byte_end":22859,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22864,"byte_end":22867,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/         if self.set.load(Relaxed) {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22872,"byte_end":22911,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/             Poll::Ready(())","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22916,"byte_end":22947,"line_start":254,"line_end":254,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22952,"byte_end":22972,"line_start":255,"line_end":255,"column_start":5,"column_end":25}},{"value":"/             Poll::Pending","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":22977,"byte_end":23006,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":23011,"byte_end":23024,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":23029,"byte_end":23038,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":23043,"byte_end":23048,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":23053,"byte_end":23060,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27748,"byte_end":27752,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"wake","qualname":"<AtomicWaker>::wake","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[{"value":"/ Calls `wake` on the last `Waker` passed to `register`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27599,"byte_end":27657,"line_start":350,"line_end":350,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27662,"byte_end":27665,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27670,"byte_end":27736,"line_start":352,"line_end":352,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":28248,"byte_end":28252,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicWaker>::take","value":"fn (&self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[{"value":"/ Returns the last `Waker` passed to `register`, so that the user can wake it.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27852,"byte_end":27932,"line_start":359,"line_end":359,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27937,"byte_end":27940,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27945,"byte_end":27948,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Sometimes, just waking the AtomicWaker is not fine grained enough. This allows the user","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":27953,"byte_end":28044,"line_start":362,"line_end":362,"column_start":5,"column_end":96}},{"value":"/ to take the waker and then wake it separately, rather than performing both steps in one","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":28049,"byte_end":28140,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/ atomic action.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":28145,"byte_end":28163,"line_start":364,"line_end":364,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":28168,"byte_end":28171,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ If a waker has not been registered, this returns `None`.","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":28176,"byte_end":28236,"line_start":366,"line_end":366,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1122,"byte_end":1135,"line_start":33,"line_end":33,"column_start":9,"column_end":22},"name":"core_reexport","qualname":"::core_reexport","value":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":169}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2512,"byte_end":2515,"line_start":37,"line_end":37,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2789,"byte_end":2790,"line_start":52,"line_end":52,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3566,"byte_end":3567,"line_start":75,"line_end":75,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3931,"byte_end":3934,"line_start":92,"line_end":92,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":4135,"byte_end":4151,"line_start":99,"line_end":99,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8485,"byte_end":8488,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9640,"byte_end":9643,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9917,"byte_end":9918,"line_start":163,"line_end":163,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10690,"byte_end":10691,"line_start":184,"line_end":184,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":11079,"byte_end":11082,"line_start":202,"line_end":202,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":11488,"byte_end":11504,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":11914,"byte_end":11917,"line_start":233,"line_end":233,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20712,"byte_end":20723,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20893,"byte_end":20898,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29402,"byte_end":29413,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29499,"byte_end":29510,"line_start":405,"line_end":405,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29639,"byte_end":29650,"line_start":411,"line_end":411,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29675,"byte_end":29686,"line_start":412,"line_end":412,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":884,"byte_end":890,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":972,"byte_end":978,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":56}},{"kind":"Mod","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/lib.rs","byte_start":1073,"byte_end":1077,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":129}},{"kind":"Mod","span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/mod.rs","byte_start":12110,"byte_end":12120,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":132}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2202,"byte_end":2208,"line_start":26,"line_end":26,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":7916},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2512,"byte_end":2515,"line_start":37,"line_end":37,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2789,"byte_end":2790,"line_start":52,"line_end":52,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":29},"to":{"krate":0,"index":27}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":2990,"byte_end":2996,"line_start":57,"line_end":57,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":7916},"to":{"krate":0,"index":32}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3019,"byte_end":3025,"line_start":57,"line_end":57,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":27},"to":{"krate":0,"index":32}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3566,"byte_end":3567,"line_start":75,"line_end":75,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":37},"to":{"krate":0,"index":32}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":3931,"byte_end":3934,"line_start":92,"line_end":92,"column_start":59,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/future.rs","byte_start":4135,"byte_end":4151,"line_start":99,"line_end":99,"column_start":54,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":3710},"to":{"krate":0,"index":17}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":8485,"byte_end":8488,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9341,"byte_end":9347,"line_start":137,"line_end":137,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":68},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9640,"byte_end":9643,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":29206},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":9917,"byte_end":9918,"line_start":163,"line_end":163,"column_start":30,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":94},"to":{"krate":0,"index":92}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10116,"byte_end":10122,"line_start":168,"line_end":168,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":68},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10145,"byte_end":10151,"line_start":168,"line_end":168,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":92},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":10690,"byte_end":10691,"line_start":184,"line_end":184,"column_start":29,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":102},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":11079,"byte_end":11082,"line_start":202,"line_end":202,"column_start":49,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":11488,"byte_end":11504,"line_start":218,"line_end":218,"column_start":44,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":3710},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/stream.rs","byte_start":11914,"byte_end":11917,"line_start":233,"line_end":233,"column_start":59,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20712,"byte_end":20723,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20857,"byte_end":20861,"line_start":202,"line_end":202,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1864},"to":{"krate":0,"index":150}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":20893,"byte_end":20898,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":7997},"to":{"krate":0,"index":150}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29402,"byte_end":29413,"line_start":399,"line_end":399,"column_start":18,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":1843}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29499,"byte_end":29510,"line_start":405,"line_end":405,"column_start":21,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":5916}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29639,"byte_end":29650,"line_start":411,"line_end":411,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":1852}},{"span":{"file_name":"/Users/chengbin/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.4/src/task/__internal/atomic_waker.rs","byte_start":29675,"byte_end":29686,"line_start":412,"line_end":412,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":142},"to":{"krate":2,"index":1864}}]}